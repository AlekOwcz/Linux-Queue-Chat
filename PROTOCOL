Alekander Owczarczak, 148172, Informatyka, III semestr

Funkcjonalność dodatkowa: priorytety wiadomości.

Wykorzystywane struktury:

typedef struct userInfo {       Struktura wykorzystywana przez serwer do łatwego przechowywania i dostępu do danych użytkownika. 
    int usrID;                  Pole przechowujące ID użytkownika.
    char usrNAME[32];           Pole przechowujące nazwę użytkownika.
    int logged;                 Pole przechowujące status zalogowania użytkownika.
    int communication;          Pole przechowujące id kolejki do komunikacji przez serwer z użytkownikiem.
} USER;

typedef struct groupInfo {      Struktura wykorzystywania przez serwer do łatwego przechowywania i dostępu do danych o grupie. 
    int groupID;                Pole przechowujące ID grupy.
    char groupNAME[32];         Pole przechowujące nazwę grupy.
    int members[64];            Pole przechowujące tablicę 0 i 1. Indeks pola tablicy powiększony o jeden odpowiada ID użykownika. 
} GROUP;                        Wartość 1 oznacza członkostwo użytkownika w grupie.

typedef struct ServerToClient {     Struktura bufora wiadomości, służąca do przekazywania serwerowi ID prywatnej kolejki klienta do komunikacji z serwerem.
    long mtype;                     Pole przechowujące typ wiadomości.
    int ID;                         Pole przechowujące ID użytkownika.
    int queue;                      Pole przechowujące ID kolejki.
} STC;

typedef struct ConfirmationQueue {  Struktura bufora wiadomości, służąca do przekazywania klientowi potwierdzenia wykonania żądania.
    long mtype;                     Pole przechowujące typ wiadomości.
    int confirmation;               Pole przechowujące stan potwierdzenia 1 - potwierdzono, 0 - odrzucono.
} Confirm;

typedef struct ClientServerCom {    Struktura bufora wiadomości, służąca do przekazywania serwerowi żądań.
    long mtype;                     Pole przechowujące typ wiadomości.
    int senderID;                   Pole przechowujące ID nadawcy.
    char senderName[32];            Pole przechowujące nazwę nadawcy.
    char receiverName[32];          Pole przechowujące nazwę adresata (jeśli wiadomość związana jest z innym użytkownikiem).
    char groupName[32];             Pole przechowujące nazwę (lub czasem ID w formie ciągu znaków) grupy (jeśli wiadomość związana jest z grupą).
    char message[256];              Pole przechowujące wiadomość (jeśli jakaś jest przesyłana innemu użytkownikowi/grupie).
} CSC;

typedef struct Message {            Struktura wykorzystywana przez serwer do przekazywania wiadomości tekstowej użytkownikowi/grupie.
    long mtyp;                      Pole przechowujące typ wiadomości.
    char senderName[32];            Pole przechowujące nazwę nadawcy.
    char groupName[32];             Pole przechowujące nazwę grupy (jeśli wiadomość jest do niej skierowana).
    char msg[256];                  Pole przechowujące wiadomość tekstową.
} MSG;

typedef struct Logged {             Struktura wykorzystywana do przesłania klientowi listy zalogowanych użytkowników.
    long mtype;                     Pole przechowujące typ wiadomości.
    int loggedusers[64];            Pole przechowujące tablicę 0 i 1. Indeks tablicy powiększony o 1 odpowiada ID użytkownika. Wartość 1 oznacza zalogowanie.
} LGD;

typedef struct GroupMembers {       Struktura wykorzystywana do przesłania klientowi listy członków grupy.
    long mtype;                     Pole przechowujące typ wiadomości.
    int groupmembers[64];           Pole przechowujące tablicę 0 i 1. Indeks tablicy powiększony o 1 odpowiada ID użytkownika. Wartość 1 oznacza członkostwo w grupie.
    int conf;                       Pole przechowujące stan odnalezienia grupy. 1 - odnaleziono grupę, 0 - nie znaleziono podanej grupy. 
} GRP;

Kolejki komunikatów:

msgFromServer - Prywatna kolejka każdego klienta, służy do odbierania wiadomości od serwera. Jej ID jest przesyłane serwerowi podczas logowania.

clientServerCom - Kolejka służąca do wysyłania żądań do serwera. Występuje zarówno w serwerze jak i w kliencie.
klucz: ftok("inf148172_s.c", 87);

receiveQueueID - Kolejka służąca wysyłaniu serwerowi ID prywatnej kolejki msgFromServer. Występuje zarówno w serwerze jak i w kliencie.
klucz: ftok("inf148172_s.c", 89)

Pamięć współdzielona:

SHMuserlist - Prywatna pamięć serwera do przechowywania tablicy struktur typu USER.
SHMgrouplist - Prywatna pamięć serwera do przechowywania tablicy struktur typu GROUP.
quitserver - Pamięc przechowująca stan pracy serwera. Wartosć 0 oznacza kontynuacja pracy. Wartość 1 sygnalizuje prosom serwera kończenie pracy.
quitclient - Odpowiednik quit server dla klienta.
shmonline - Pamięć przechowująca dostepność serwera. Wartość 0 oznacza brak komunikacji z serwerem.
klucz: ftok("inf148172_s.c", 10);
loggedSHM - Składa się z 2 komórek pamięci. Pierwsza przechowuje stan zalogowania u klienta oraz jego ID. Wartość 0 oznacza brak zalogowania, 1 - zalogowanie. Druga komórka przechowuje ID zalogowanego użytkownika. Wartość 0 oznacza brak zalogowania.
usernameSHM - Składa się z 32 bajtów. Przechowuje nazwę zalogowanego użytkownika. Pusty ciąg znaków oznacza brak zalogowania. 